#!/bin/bash
VPC_ID=$(aws ec2 create-vpc --cidr-block 10.0.0.0/16 --query Vpc.VpcId --output text)
echo "VPC ${VPC_ID} created!!"

SUBNET_ID0=$(aws ec2 create-subnet --vpc-id "${VPC_ID}" --cidr-block 10.0.0.0/24 --availability-zone us-east-1a --query Subnet.SubnetId --output text)
echo "Subnet 1 ${SUBNET_ID0} created!!"

SUBNET_ID1=$(aws ec2 create-subnet --vpc-id "${VPC_ID}" --cidr-block 10.0.1.0/24 --availability-zone us-east-1a --query Subnet.SubnetId --output text)
echo "Subnet 2 ${SUBNET_ID1} created!!"

SUBNET_ID2=$(aws ec2 create-subnet --vpc-id "${VPC_ID}" --cidr-block 10.0.2.0/24 --availability-zone us-east-1a --query Subnet.SubnetId --output text)
echo "Subnet 3 ${SUBNET_ID2} created!!"

SUBNET_ID3=$(aws ec2 create-subnet --vpc-id "${VPC_ID}" --cidr-block 10.0.3.0/24 --availability-zone us-east-1a --query Subnet.SubnetId --output text)
echo "Public ${SUBNET_ID3} created!!"

aws ec2 modify-subnet-attribute --subnet-id "${SUBNET_ID3}" --map-public-ip-on-launch
echo "Auto-assign public IP addresses enabled for subnet ${SUBNET_ID3}!"

IGW_ID=$(aws ec2 create-internet-gateway --query InternetGateway.InternetGatewayId --output text)
echo "Internet Gateway ${IGW_ID} created!!"

aws ec2 attach-internet-gateway --vpc-id "${VPC_ID}" --internet-gateway-id "${IGW_ID}"
echo "IGW attached to VPC!!"

RTB_ID=$(aws ec2 create-route-table --vpc-id "${VPC_ID}" --query RouteTable.RouteTableId --output text)
echo "Route Table ${RTB_ID} created!"

aws ec2 create-route --route-table-id "${RTB_ID}" --destination-cidr-block 0.0.0.0/0 --gateway-id "${IGW_ID}"
echo "Some route in the RTB created!"
aws ec2 associate-route-table --route-table-id "${RTB_ID}" --subnet-id "${SUBNET_ID3}"
echo "Associated the route table with the public subnet!!"


KEY_PAIR=$(aws ec2 create-key-pair --key-name my-key-pair --query 'KeyMaterial' --output text)
echo "${KEY_PAIR}" > my-key-pair.pem
chmod 400 my-key-pair.pem
echo "Key Pair ${KEY_PAIR} created!"

SG_ID=$(aws ec2 create-security-group --group-name my-sg --description "My security group" --vpc-id "${VPC_ID}" --output text)
echo "Security Group ${SG_ID} created!!"
aws ec2 authorize-security-group-ingress --group-id "${SG_ID}" --protocol tcp --port 22 --cidr 0.0.0.0/0
aws ec2 authorize-security-group-ingress --group-id "${SG_ID}" --protocol tcp --port 80 --cidr 0.0.0.0/0

echo "Rule for SSH created!!"
aws ec2 run-instances --image-id ami-0557a15b87f6559cf --instance-type t2.micro --key-name my-key-pair --security-group-ids "${SG_ID}" --subnet-id "${SUBNET_ID3}"

